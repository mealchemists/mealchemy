name: Deploy to GCP ok

on:
  push:
    branches:
      - main 

jobs:
  deploy-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate with GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Set GCP project
        run: |
          gcloud config set project ${{ secrets.GCP_PROJECT_ID }}

      - name: Build & Push Docker Image
        run: |
          gcloud auth configure-docker us-west1-docker.pkg.dev
            docker build -t us-west1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/mealchemy-docker/frontend:latest ./frontend
            docker push us-west1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/mealchemy-docker/frontend:latest

      # Step 6: Deploy the React App to Cloud Run
      - name: Deploy React App to Cloud Run
        run: |
          gcloud run deploy react-service \
            --region us-west1 \
            --image us-west1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/mealchemy-docker/frontend:latest \
            --allow-unauthenticated \
            --platform managed \
            --set-env-vars "REACT_APP_API_URL=https://api.mealchemy.app/api" \
            --port 80 \
            --memory 2G


  deploy-backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate with GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Set GCP project
        run: |
          gcloud config set project ${{ secrets.GCP_PROJECT_ID }}

      - name: Build & Push Docker Image
        run: |
          gcloud auth configure-docker us-west1-docker.pkg.dev
          docker build -t us-west1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/mealchemy-docker/backend:latest ./backend
          docker push us-west1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/mealchemy-docker/backend:latest
      # Step 5: Deploy the backend to Cloud Run
      - name: Deploy backend to Cloud Run
        run: |
          gcloud run deploy backend-service \
            --region us-west1 \
            --image us-west1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/mealchemy-docker/backend:latest \
            --add-cloudsql-instances ${{ secrets.CLOUD_SQL_CONNECTION_NAME }} \
            --allow-unauthenticated \
            --set-env-vars ALLOWED_HOSTS=backend-service-102081122635.us-west1.run.app \
            --set-env-vars "EMAIL_USER=${{secrets.EMAIL_USER}}" \
            --set-env-vars "EMAIL_PASSWORD=${{secrets.EMAIL_PASSWORD}}" \
            --set-env-vars "DEFAULT_EMAIL=${{secrets.DEFAULT_EMAIL}}" \
            --set-env-vars "PIKA_URL=${{secrets.PIKA_URL}}" \
            --set-env-vars "PROD=true" \
            --platform managed \
            --port 8080

      # Step 7: Trigger Cloud Run Migration Job
      - name: Trigger Cloud Run Migration Job
        run: |
          gcloud run jobs execute make-migrations --region us-west1

      - name: Trigger Cloud Run Migration Job
        run: |
          gcloud run jobs execute migrate-job --region us-west1

  deploy-consumer:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate with GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Set GCP project
        run: |
          gcloud config set project ${{ secrets.GCP_PROJECT_ID }}

      - name: Build & Push Docker Image for Consumer
        run: |
          gcloud auth configure-docker us-west1-docker.pkg.dev
          docker build -t us-west1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/mealchemy-docker/consumer:latest ./recipe-extractors
          docker push us-west1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/mealchemy-docker/consumer:latest

      # Authenticate Docker with Artifact Registry
      - name: Authenticate Docker to Google Artifact Registry
        run: |
          gcloud auth configure-docker us-west1-docker.pkg.dev

      # - name: Deploy Consumer to Google Compute Engine (VM)
      #   run: |
      #     # SSH into the Google Compute Engine instance and install Docker if not installed
      #     gcloud compute ssh mealchemy-ce --zone us-west1-a --command "
      #       if ! command -v docker &> /dev/null; then
      #         echo 'Docker not found, installing...';
      #         sudo apt-get update && sudo apt-get install -y apt-transport-https ca-certificates curl software-properties-common;
      #         curl -fsSL https://get.docker.com -o get-docker.sh;
      #         sudo sh get-docker.sh;
      #         sudo usermod -aG docker $USER; 
      #         sudo systemctl enable docker;
      #         sudo systemctl start docker;
      #       else
      #         echo 'Docker is already installed';
      #       fi
      #     "

      #     # Now that Docker is installed, pull the image and run the container
      #     gcloud compute ssh mealchemy-ce --zone us-west1-a --command "
      #       sudo docker pull us-west1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/mealchemy-docker/consumer:latest && \
      #       sudo docker stop consumer || true && \
      #       sudo docker rm consumer || true && \
      #       sudo docker run -d --name consumer \
      #         -e PIKA_URL=${{ secrets.PIKA_URL }} \
      #         -e EXTRACT_URL=https://backend-service-102081122635.us-west1.run.app \
      #         -e DJANGO_URL=${{ secrets.DJANGO_URL }} \
      #         --memory 1G \
      #         us-west1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/mealchemy-docker/consumer:latest
      #     "

    



