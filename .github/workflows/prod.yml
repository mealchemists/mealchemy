name: Deploy to GCP & Supabase

on:
  push:
    branches:
      - prod-deploy

jobs:
  deploy-backend:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code from the repository
      - name: Checkout repository
        uses: actions/checkout@v2

      # Step 2: Set up Google Cloud SDK
      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          credentials_json: ${{ secrets.GCP_CREDENTIALS_JSON }}
      
      # Step 3: Build the container image
      - id: "Build Container Image"
        name: buildpacksio/pack
        args: ["build", "${_IMAGE_NAME}", "--builder=gcr.io/buildpacks/builder"]

      # Step 4: Push the container image to Google Container Registry
      - id: "Push Container Image"
        name: "gcr.io/cloud-builders/docker"
        args: ["push", "${_IMAGE_NAME}"]

      # Step 5: Run database migrations via Cloud Run Jobs
      - id: "Migrate database"
        name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
        entrypoint: /bin/bash
        args:
          - "-c"
          - |
            gcloud run jobs create migrate-job \
              --region ${_REGION} \
              --image ${_IMAGE_NAME} \
              --set-cloudsql-instances ${_CLOUD_SQL_CONNECTION_NAME} \
              --set-env-vars SETTINGS_NAME=${_SECRET_SETTINGS_NAME} \
              --command migrate \
              --execute-now

      # Step 6: Create superuser via Cloud Run Jobs
      - id: "Create superuser"
        name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
        entrypoint: /bin/bash
        args:
          - "-c"
          - |
            gcloud run jobs create superuser-job \
              --region ${_REGION} \
              --image ${_IMAGE_NAME} \
              --set-cloudsql-instances ${_CLOUD_SQL_CONNECTION_NAME} \
              --set-env-vars SETTINGS_NAME=${_SECRET_SETTINGS_NAME} \
              --set-env-vars DJANGO_SUPERUSER_EMAIL=${_ADMIN_EMAIL} \
              --set-secrets DJANGO_SUPERUSER_PASSWORD=${_ADMIN_PASSWORD_NAME}:latest \
              --command createsuperuser \
              --execute-now

    options:
      dynamicSubstitutions: true

    substitutions:
      _INSTANCE_NAME: mealchemy-db
      _CLOUD_SQL_CONNECTION_NAME: ${PROJECT_ID}:${_REGION}:${_INSTANCE_NAME}
      _REGION: us-west1
      _SERVICE_NAME: polls-service
      _SECRET_SETTINGS_NAME: django_settings
      _ARTIFACT_REGISTRY: cloud-run-source-deploy
      _IMAGE_NAME: ${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REGISTRY}/${_SERVICE_NAME}
      _ADMIN_EMAIL: example@example.com
      _ADMIN_PASSWORD_NAME: superuser_password

    images:
      - "${_IMAGE_NAME}"
