from django.db import models
from django.contrib.auth.models import User
from backend.models import TimeStampedModel

class Recipe(TimeStampedModel):
    user = models.ForeignKey(User, on_delete=models.CASCADE, null=True)
    name = models.CharField(max_length=255)
    description = models.TextField(blank=True, null=True)
    prep_time = models.IntegerField(help_text="Preparation time in minutes")
    cook_time = models.IntegerField(help_text="Cooking time in minutes")
    total_time = models.IntegerField(help_text="Total time in minutes")
    cuisine = models.CharField(max_length=100, blank=True, null=True)
    source_url = models.URLField()  # URL where the recipe was scraped from
    
    def save(self, *args, **kwargs):
        if self.total_time is None:
            self.total_time = self.prep_time + self.cook_time
        super().save(*args, **kwargs)
        
class Aisle(TimeStampedModel):
    name = models.CharField(max_length=255, unique=True)  
    llm_generated = models.BooleanField(default=False)  # Flag to mark if the tag was generated by LLM
    updated_by_user = models.BooleanField(default=False)  # To track if a user modified the tag

class Ingredient(TimeStampedModel):
    name = models.CharField(max_length=255, unique=True)
    calories = models.CharField(max_length=255,null=True, help_text="Amount of calories")
    aisle = models.ForeignKey(Aisle, on_delete=models.SET_NULL, null=True, blank=True) 
    protein = models.CharField(max_length=255,null=True, help_text="Amount of protein in grams")
    carbs = models.CharField(max_length=255,null=True, help_text="Amount of carbohydrates in grams")
    fat = models.CharField(max_length=255,null=True, help_text="Amount of fat in grams")
    sugar = models.CharField(max_length=255,null=True, help_text="Amount of sugar in grams")
    
class RecipeIngredient(TimeStampedModel):
    recipe = models.ForeignKey(Recipe, on_delete=models.CASCADE, null=True)
    ingredient = models.ForeignKey(Ingredient, on_delete=models.CASCADE, null=True)
    quantity = models.CharField(max_length=255, null=True)
    unit = models.CharField(max_length=255, null=True)
    
class MealPlan(TimeStampedModel):
    day_planned = models.TimeField(null=True)
    meal_type = models.CharField(max_length=255, null=True, help_text="breakfast/lunch/dinner")
    recipe = models.ForeignKey(Recipe, on_delete=models.CASCADE, null=True)

    
    
    